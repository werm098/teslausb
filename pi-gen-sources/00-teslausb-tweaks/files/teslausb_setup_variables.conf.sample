#####################################################################
# SAMPLE CONFIGURATION FILE FOR TESLAUSB Pi Setup
#
# Example config file for teslausb_setup. Lines with "#" are comments/ignored.
# Remove the "#" before "export" to activate a line. Be sure to rename this file
# to "teslausb_setup_variables.conf" and place it in the "boot" folder of your
# SD card.
# The latest version of this file is at: https://bit.ly/teslausbconfig
#
######################################################################

# Variables for CIFS (Windows/Mac file sharing) archiving.
# If you want to use rsync or rclone, delete or comment out this section
# and uncomment the rsync or rclone section below.
export ARCHIVE_SYSTEM=cifs
export ARCHIVE_SERVER=your_archive_name_or_ip
export SHARE_NAME='your_archive_share/optional_path_on_share'
export SHARE_USER=username
export SHARE_PASSWORD='password'
# the cifs options below usually don't need to be specified
# export SHARE_DOMAIN=domain
# export CIFS_VERSION="3.0"
# export CIFS_SEC="ntlm"

# Variables for rsync archiving
# For instructions setting up SSH Public Key authentication, view:
# https://github.com/marcone/teslausb/blob/main-dev/doc/SetupRSync.md#step-1-authentication
#export ARCHIVE_SYSTEM=rsync
#export RSYNC_USER=username
#export RSYNC_SERVER=hostname_or_ip
#export RSYNC_PATH=path_on_server

# Variables for rclone archiving
# If you are using rclone to archive to a local (non-cloud) server,
# you may want to set the ARCHIVE_SERVER variable to the name or
# ip of you local server instead.
#export ARCHIVE_SYSTEM=rclone
#export ARCHIVE_SERVER=8.8.8.8
#export RCLONE_DRIVE="remotename"
#export RCLONE_PATH="remotepathname"
# The following is optional
#export RCLONE_FLAGS=()

# The DATA_DRIVE option (formerly USB_DRIVE) is used to specify that you want
# to store recordings on a different drive than the boot drive. If you don't
# plan on using an sd card at all (i.e. you are both booting from and storing
# recordings on the USB drive), or are ONLY using an sd card (i.e. boot from
# and store recordings on sd card), do NOT uncommment this line.
# This should be set to the device name of the drive, e.g. /dev/sda for a drive
# connected to a USB port, or /dev/nvme0n1 for an onboard NVME drive.
# NOTE: the specified drive will be wiped and repartitioned.
# export DATA_DRIVE=/dev/sda

# The car normally keeps an hour worth of RecentClips, however there have been
# reports of that amount varying by country.
# In order to keep a continuous record of RecentClips the snapshot interval
# should be set about 2 minutes shorter than the amount of RecentClips history
# the car keeps. The following adjusts the capture interval for cases where the
# car only keeps 10 minutes of history. Please follow your local regulations
# when uncommenting and/or adjusting this setting.
# export SNAPSHOT_INTERVAL=480 # this number is in seconds

# Uncomment this to archive RecentClips in addition to SavedClips, SentryClips
# and track mode clips.
#export ARCHIVE_RECENTCLIPS=true

# SavedClips, SentryClips and track mode clips are archived by default, but
# you can turn that off by uncommenting the settings below
#export ARCHIVE_SAVEDCLIPS=false
#export ARCHIVE_SENTRYCLIPS=false
#export ARCHIVE_TRACKMODECLIPS=false

# Notes on sd card and image sizes:
#   * A 128 GB or larger sd card (or USB drive, when using Pi4) is recommended.
#     The minimum supported size is 64 GB.
#   * When specifying sizes for the recordings and music drives, you can use
#     specific sizes (e.g. 24G) or use sizes relative to the available space
#     (e.g. 10%). It is recommended to use specific sizes.
#   * The setup script will reserve a fixed 6 GB of space regardless of sd card
#     size.
#   * CAM_SIZE should generally be somewhat small, around 16G to 32G, unless you
#     plan on accumulating a lot of footage between archive operations, in which
#     case you should increase the value (an hour of recordings, or 6 Sentry
#     events, is about 7-9 GB of data).
#   * As of Tesla software version 2020.48.10, the car will warn when the
#     recording drive is smaller than 32 GB, but smaller values will still work.
#     Tesla appears to use power-of-ten based sizes, presumably because most
#     storage manufacturers do too.
#     Because teslausb uses power-of-two sizes, you can specify "30G" for the
#     size and not get the warning.
#   * MUSIC_SIZE should be large enough to hold your music library, obviously.
#   * If no music size is specified, no music drive will be created.
#   * If no lightshow size is specified, no lightshow drive will be created.
#   * If no boombox size is specified, no boombox drive will be created.
export CAM_SIZE=30G
#export MUSIC_SIZE=4G
#export LIGHTSHOW_SIZE=1G
#export BOOMBOX_SIZE=100M

# If you want to automatically copy music from a CIFS share every time
# the Pi connects to wifi, set the following variable. The share is
# assumed to exist on the same server as the archive share. It can
# be the same share as the share used for backing up recordings, but
# the folder needs to be different.
# export MUSIC_SHARE_NAME=your_music_share/music_folder

# Wifi setup information. Note that Raspberry Pi Zero W only supports 2.4 GHz
# wifi.
# If you are you are trying to connect to a network with a _hidden_ SSID,
# edit /boot/wpa_supplicant.conf.sample and un-comment the indicated line.
# You do not need to set these variables if networking is already configured
# and you ran the "install.sh" script
export SSID='your_ssid'
export WIFIPASS='your_pass'

# Uncomment to use ExFAT filesystem instead of FAT32.
# ExFAT is the filesystem used by Tesla when the drive is formatted in the car.
# Using ExFAT is not recommended for the TeslaUSB prebuilt image, as it is
# based on an older kernel that has no TRIM support for ExFAT.
# export USE_EXFAT=true

# Uncomment to enable a Samba/CIFS server that makes the recordings available
# as a network share.
# This is obsolete/deprecated, as you can now access recordings via TeslaUSB's
# web interface.
#export SAMBA_ENABLED=true
# uncomment to enable guest access to the Samba server
#export SAMBA_GUEST=true

# Uncomment to enable teslausb to act as a wifi access point with the given
# SSID, so you can access it while on the road. This should work on Raspberry Pi
# but may not work on other devices.
#export AP_SSID='TESLAUSB WIFI'
# Change this! The setup script will not accept the default 'password'
# Also note that the wifi password must be at least 8 characters.
#export AP_PASS='password'
# IP address is optional. The AP will give its clients IP addresses in the
# x.x.x.100-150 range so make sure you don't put the AP's IP address in
# that range.
#export AP_IP='192.168.66.1'

# Uncomment if you'd like to password protect the teslausb web interface
# WARNING: Anyone on the $SSID (and $AP_SSID if configured) wifi network can
# freely interact with the teslausb web interface if it isn't secured!
# export WEB_USERNAME='pi'
# export WEB_PASSWORD='raspberry'

# Uncomment this if you are using Raspberry Pi OS and want to set the time
# zone to something other than the default 'BST' timezone.
# If you are using Armbian then Armbian likely already set the correct time
# zone when you first set up Armbian, and uncommenting this isn't necessary.
# Can be an actual time zone, or "auto" to attempt automatic timezone detection
# export TIME_ZONE="America/Los_Angeles"

# By default there is a 20 second delay between connecting to wifi and
# starting the archiving of recorded clips. Uncomment this to change
# the duration of that delay
# export ARCHIVE_DELAY=20

# Uncomment if you want to override the default hostname of "teslausb"
# export TESLAUSB_HOSTNAME=teslausb-Model3

# uncomment to define an SSH public key that can be utilized to SSH into
# teslausb as root
# export SSH_ROOT_PUBLIC_KEY='ssh-rsa AAAAB3NzaC1yc2EAAAADA... user@host.domain'

# uncoment to disable password SSH authentication for all users
# export SSH_DISABLE_PASSWORD_AUTHENTICATION=true

# Push notifications consist of a title and a message.
# By default TESLAUSB_HOSTNAME is used as the title, but you can
# set a custom title by setting the following variable.
# export NOTIFICATION_TITLE="TeslaUSB Notification"

# Uncomment if setting up Signal_cli notifications
# export SIGNAL_ENABLED=true
# export SIGNAL_URL=http://<url>:8080
# export SIGNAL_FROM_NUM=country_code_and_number_configured_with_signal
# export SIGNAL_TO_NUM=country_code_and_number_configured_with_signal

# Uncomment if setting up Pushover push notifications
# export PUSHOVER_ENABLED=true
# export PUSHOVER_USER_KEY=user_key
# export PUSHOVER_APP_KEY=app_key

# Uncomment if setting up Gotify push notifications
# export GOTIFY_ENABLED=true
# export GOTIFY_DOMAIN=https://gotify.domain.com
# export GOTIFY_APP_TOKEN=put_your_token_here
# export GOTIFY_PRIORITY=5

# Uncomment if setting up IFTTT push notifications
# export IFTTT_ENABLED=true
# export IFTTT_EVENT_NAME=put_your_event_name_here
# export IFTTT_KEY=put_your_key_here

# Uncomment if setting up Discord push notifications
# export DISCORD_ENABLED=true
# export DISCORD_WEBHOOK_URL=put_your_webhook_url_here

# Uncomment if setting up AWS SNS notifications
# export SNS_ENABLED=true
# export AWS_REGION=us-east-1
# export AWS_ACCESS_KEY_ID=put_your_accesskeyid_here
# export AWS_SECRET_ACCESS_KEY=put_your_secretkey_here
# export AWS_SNS_TOPIC_ARN=put_your_sns_topicarn_here

# Uncomment if setting up Telegram notifications
# export TELEGRAM_ENABLED=true
# export TELEGRAM_CHAT_ID=123456789
# export TELEGRAM_BOT_TOKEN=bot123456789:abcdefghijklmnopqrstuvqxyz987654321
# export TELEGRAM_SILENT_NOTIFY=false

# Uncomment if setting up Webhook notifications
# export WEBHOOK_ENABLED=true
# export WEBHOOK_URL=http://domain/path

# Uncomment if setting up Slack notifications
# export SLACK_ENABLED=true
# export SLACK_WEBHOOK_URL=http://domain/path

# Uncomment if setting up Matrix notifications
# export MATRIX_ENABLED=true
# export MATRIX_SERVER_URL=https://matrix.org
# export MATRIX_USERNAME=put_your_matrix_username_here
# export MATRIX_PASSWORD='put_your_matrix_password_here'
# export MATRIX_ROOM='put_the_matrix_target_room_id_here'

# Uncomment if setting up shell notifications.
# export NOTIFICATION_COMMAND_ENABLED=true
# export NOTIFICATION_COMMAND_START="ssh root@remote-server 'command args'"
# export NOTIFICATION_COMMAND_FINISH="ssh root@remote-server 'command args'"

# Tesla_dashcam / Trigger file support.
# Uncomment any TRIGGER_FILE_xxxxx below to create trigger file(s) in the
# archive directory for the listed clip type after all clips have been
# transferred for that type.
# e.g: export TRIGGER_FILE_SAVED=ARCHIVE_UPLOADED would create a file in
# $ARCHIVE_BASE/SavedClips/ARCHIVE_UPLOADED.
# Uncomment TRIGGER_FILE_ANY to create a trigger file in $ARCHIVE_BASE. This will
# make tesla_dashcam process both SavedClips and SentryClips when either changes.
# This is useful if using https://github.com/ehendrix23/tesla_dashcam to further
# process clips.
# e.g: tesla_dashcom --monitor --monitor_trigger $ARCHIVE_BASE/SavedClips/ARCHIVE_UPLOADED $ARCHIVE_BASE/SavedClips
#
# You may modify the value to your desired trigger filename. Remember to alter
# your tesla_dashcam trigger filename to match.
#.
# export TRIGGER_FILE_SAVED=ARCHIVE_UPLOADED
# export TRIGGER_FILE_SENTRY=ARCHIVE_UPLOADED
# export TRIGGER_FILE_RECENT=ARCHIVE_UPLOADED
# export TRIGGER_FILE_ANY=ARCHIVE_UPLOADED

# TeslaUSB can optionally use the Tesla API to keep your car awake, so it can
# power the Pi long enough for the archiving process to complete. To enable
# that, provide your Tesla account refresh_token.
# TeslaUSB will only send your credentials to the Tesla API itself.
#
# NOTE:  if you do this, it's highly recommended that you set up 'PIN to Drive'
#   as if the Pi or the car is stolen, the thief has access to your Tesla
#   account through that token, add their own devices as a key, steal the car,
#   etc.
#   If either is stolen, CHANGE YOUR TESLA PASSWORD IMMEDIATELY.
#
# ALSO NOTE: having sentry mode enabled in your Tesla will keep your car awake.
#   But, make sure you have not excluded your home in the sentry mode settings.
#
# GENERATE THE TOKEN: To generate the token use one of the apps below, you will
#   need to login with your tesla account, and then copy the refresh_token
#
# Android: https://play.google.com/store/apps/details?id=net.leveugle.teslatokens
# iOS: https://apps.apple.com/us/app/auth-app-for-tesla/id1552058613#?platform=iphone
#
# TeslaFi or Tessie Subscriber?
#   If you're a TeslaFi or Tessie user, you may consider keeping the car awake using
#   one of their APIs instead. The advantage is not having to expose Tesla's Token
#   and other info in this file as plain text, which is a vulnerability (as
#   noted above. 'PIN to Drive' is not necessary in this case.
#   TeslaFi and Tessie's API token can easily be revoked and a new one generated at
#   anytime. TeslaFi also allows selective command(s) enablement (e.g. disable
#   uneeded commands), further decreasing vulnerability.
# 
# IMPORTANT: Only ONE API should be used at the same time. 
# Do not include API tokens for more than one of TeslaFi, Tessie or Tesla.
# 
# How to generate TeslaFi API Tokens
# GENERATE/REVOKE TESLAFI API TOKEN: Log into your TeslaFi account.
#   Navigate to Settings -> Tesla API -> API Token (tab)
#
# ENABLE/DISABLE TESLAFI API COMMANDS: Verify the 'Resume Polling' (wake)
#   command is enabled. Do not confused this with the 'Wake Vehicle' command.
#   Navigate to Settings -> Tesla API -> Commands (tab)
#
# How to generate Tessie API Tokens
# GENERATE/REVOKE TESSIE API TOKEN: Log into your Tessie account.
#   Navigate to Settings -> Developer API -> Generate access token
#
# export TESLA_REFRESH_TOKEN='YOUR_REFRESH_TOKEN_GOES_HERE'
# export TESLAFI_API_TOKEN='YOUR_TESLAFI_API_TOKEN_GOES_HERE'
# export TESSIE_API_TOKEN='YOUR_TESSIE_API_TOKEN_GOES_HERE'
#
# TESSIE API ONLY (Do not configure if using TeslaFi/Tesla API):
# The Tessie API requires the vehicle's VIN number to issue commands to it,
# regardless of whether you only have one vehicle on the account or not.
# export TESSIE_VIN=5YJ3E1EA4JF000001
#
# TESLA API ONLY (Do not configure if using TeslaFi/Tessie API):
# If you have more than one Tesla vehicle on the account, you must also provide
# the name or VIN for the vehicle for which this TeslaUSB install will be used,
# so that TeslaUSB can keep the correct vehicle awake.
# If you only have one car on the account, you do not need to specify this.
# export TESLA_NAME="Elon's CyberTruck"
# export TESLA_VIN=5YJ3E1EA4JF000001
#
# TESLA API ONLY (Do not configure if using TeslaFi/Tessie API):
# By default, TeslaUSB uses a combination of APIs to keep the car awake,
# similar to how to the Tesla app can wake up the car.
# If you find your car isn't staying awake, you can try setting the
# following to "sentry" to keep the car awake by temporarily turning
# on Sentry mode while archiving.
# export TESLA_WAKE_MODE=stream

# Uncomment if you want to increase the size of the root
# filesystem so there's extra space for installing additional
# software. This only works if the backing store partition hasn't
# been created yet, i.e. during early setup, and requires an extra
# reboot. Sizes can be specified as for example "500M" or "2G"
# export INCREASE_ROOT_SIZE=500M

# Uncomment if you want to have teslausb automatically install some
# additional packages during setup. This only works if there is enough
# free space available on the root partition to install the requested packages.
# Requested packages should be space delineated
# export INSTALL_USER_REQUESTED_PACKAGES="iftop mosh sysstat"

# Uncomment if you want to use different vm/cpu parameters.
# Leave commented to use teslausb's defaults, or set to 'default'
# to use the system defaults.
# See https://www.kernel.org/doc/Documentation/sysctl/vm.txt
# and https://www.kernel.org/doc/Documentation/cpu-freq/governors.txt
# for details.
#export DIRTY_BACKGROUND_BYTES=65536
#export DIRTY_RATIO=80
#export CPU_GOVERNOR=conservative

# Uncomment and change if you want setup scripts to be pulled
# from a different repo than github.com/marcone/teslausb
# export REPO=marcone

# Uncomment and change if you want a different branch than main-dev
# export BRANCH=main-dev
